{"version":3,"sources":["Reducers/MainReducer.js","serviceWorker.js","config.js","Api/ApiHandler.js","Api/Api.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["defaultState","path","pathSublist","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogCreateFolder","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","Object","assign","value","toConsumableArray","concat","sort","a","b","name","toLowerCase","filter","f","i","self","map","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","host","url_list","url_create_folder","url_get_content","url_download","url_upload","url_remove","url_rename","url_move","url_copy","url_edit","url_compress","url_extract","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","messageTranslation","unknown_response","TypeError: Failed to fetch","handleFetch","resolve","reject","xthen","response","contentType","headers","get","contentDisp","isJson","test","isAttachment","ok","json","Error","blob","success","data","xcatch","errorResponse","errJson","JSON","stringify","fixPath","replace","getFileList","Promise","fetch","encodeURIComponent","API","getFileBody","filename","renameItem","newFileName","oldPath","newPath","destination","method","Content-Type","body","createFolder","folder","trim","directory","removeItems","filenames","recursive","moveItems","copyItems","uploadFiles","formData","FormData","forEach","append","getActionsByMultipleFiles","files","acts","file","fileActs","push","compressible","editable","extractable","getActionsByFile","splice","getHumanFileSize","bytes","e","Math","pow","toFixed","refreshFileList","dispatch","getState","setLoading","setSelectedFiles","APIHandler","join","r","setFileList","toString","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","getFileContent","fileName","setFileContent","setVisibleDialogContent","getFileContentForEdit","setVisibleDialogEdit","setSelectedFileFromLastTo","lastFile","_getState12","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","index","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","slice","setPath","enterToDirectory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogCreateFolder","setVisibleDialogRename","setVisibleDialogMove","setVisibleDialogCopy","percentage","File","_this$props","this","props","isSelected","size","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","createElement","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","key","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_UploadFileAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","blobUrl","tempLink","document","href","setAttribute","click","CloudDownload_default","ContextMenu","actionsComp","act","component","ContextMenuActions_OpenAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_DownloadAction","ContextMenuActions_RemoveAction","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","FormDialog","lastBlobUrl","content","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","id","DialogContent_default","src","alt","DialogActions_default","handleOpen","_this2","text","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","TextField_default","autoFocus","label","createFolderName","folderName","form","querySelector","realName","bind","newName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState10","canCopy","_getState11","UploadFileList","list","dense","List_default","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","setTimeout","target","Dialogs","Content","Edit","CreateFolder","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","message","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","origin","addEventListener","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c240e5d1.chunk.js","sourcesContent":["export const defaultState = {\r\n    path: [],\r\n    pathSublist: [],\r\n    fileList: [],\r\n    fileListSublist: [],\r\n    fileListFilter: null,\r\n    contextMenuVisible: null,\r\n    contextMenuPosition: [],\r\n    contextMenuPositionElement: null,\r\n    selectedFiles: [],\r\n    selectedFolderSublist: null,\r\n    loading: false,\r\n    loadingSublist: false,\r\n    errorMsg: null,\r\n    visibleDialogCreateFolder: false,\r\n    visibleDialogUploadFile: false,\r\n    visibleDialogContent: false,\r\n    visibleDialogEdit: false,\r\n    visibleDialogMove: false,\r\n    visibleDialogCopy: false,\r\n    visibleDialogRename: false,\r\n    fileContentBlobUrl: null,\r\n    fileUploadProgress: 0,\r\n    fileUploadList: []\r\n};\r\n\r\n/**\r\n * Main content reducer\r\n * @param {Object} state\r\n * @param {Object} action\r\n * @returns {Object}\r\n */\r\nconst MainReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PATH':\r\n            return Object.assign({}, state, {\r\n                path: action.value\r\n            });\r\n        case 'SET_PATH_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                pathSublist: action.value\r\n            });\r\n        case 'ENTER_TO_DIRECTORY':\r\n            return Object.assign({}, state, {\r\n                path: [...state.path, action.value]\r\n            });\r\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                pathSublist: [...state.pathSublist, action.value]\r\n            });\r\n        case 'SET_FILE_LIST':\r\n            return Object.assign({}, state, {\r\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\r\n            });\r\n        case 'SET_FILE_LIST_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\r\n            });\r\n        case 'SET_FILE_LIST_FILTER':\r\n            return Object.assign({}, state, { \r\n                fileListFilter: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_VISIBLE':\r\n            return Object.assign({}, state, { \r\n                contextMenuVisible: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_POSITION':\r\n            return Object.assign({}, state, { \r\n                contextMenuPosition: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\r\n            return Object.assign({}, state, { \r\n                contextMenuPositionElement: action.value\r\n            });\r\n        case 'SET_SELECTED_FILES':\r\n            return Object.assign({}, state, {\r\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\r\n            });\r\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                selectedFolderSublist: action.value\r\n            });\r\n\r\n        case 'TOGGLE_SELECTED_FILE':\r\n            return Object.assign({}, state, {\r\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\r\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\r\n                    [...state.selectedFiles, action.value]\r\n            });\r\n        case 'SET_FILE_UPLOAD_PROGRESS':\r\n            return Object.assign({}, state, {\r\n                fileUploadProgress: parseInt(action.value || 0)\r\n            });\r\n        case 'SET_LOADING':\r\n            return Object.assign({}, state, { \r\n                loading: action.value\r\n            });\r\n        case 'SET_LOADING_SUB_LIST':\r\n            return Object.assign({}, state, { \r\n                loadingSublist: action.value\r\n            });\r\n        case 'SET_ERROR_MSG':\r\n            return Object.assign({}, state, { \r\n                errorMsg: action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\r\n            return Object.assign({}, state, { \r\n                visibleDialogCreateFolder: !!action.value\r\n            });\r\n            \r\n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\r\n            return Object.assign({}, state, { \r\n                visibleDialogUploadFile: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_CONTENT':\r\n            return Object.assign({}, state, { \r\n                visibleDialogContent: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_EDIT':\r\n            return Object.assign({}, state, { \r\n                visibleDialogEdit: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_MOVE':\r\n            return Object.assign({}, state, { \r\n                visibleDialogMove: !!action.value\r\n            });\r\n        case 'SET_VISIBLE_DIALOG_COPY':\r\n            return Object.assign({}, state, { \r\n                visibleDialogCopy: !!action.value\r\n            });\r\n        case 'SET_VISIBLE_DIALOG_RENAME':\r\n            return Object.assign({}, state, { \r\n                visibleDialogRename: !!action.value\r\n            });\r\n        case 'SET_FILE_UPLOAD_LIST':\r\n            return Object.assign({}, state, {\r\n                fileUploadList: action.value\r\n            });\r\n\r\n        case 'SET_FILE_CONTENT':\r\n            /**\r\n             * Removing old blob url\r\n             */\r\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\r\n            return Object.assign({}, state, { \r\n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default MainReducer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const host = 'http://localhost:8000';\r\n\r\nexport default {\r\n    url_list: `${host}/filemanager/list`,\r\n    url_create_folder: `${host}/filemanager/dir/create`,\r\n    url_get_content: `${host}/filemanager/file/content`,\r\n    url_download: `${host}/filemanager/file/content`,\r\n    url_upload: `${host}/filemanager/items/upload`,\r\n    url_remove: `${host}/filemanager/items/remove`,\r\n    url_rename: `${host}/filemanager/item/move`,\r\n    url_move: `${host}/filemanager/items/move`,\r\n    url_copy: `${host}/filemanager/items/copy`,\r\n    url_edit: `${host}/filemanager/file/edit`,\r\n    url_compress: `${host}/filemanager/items/compress`,\r\n    url_extract: `${host}/filemanager/file/extract`,\r\n\r\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst)$/i,\r\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\r\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\r\n\r\n    actions: {\r\n        create_folder: true,\r\n        move: true,\r\n        copy: true,\r\n        copy_folder: true,\r\n        compress: true,\r\n        extract: true,\r\n        edit: true,\r\n        remove: true,\r\n        upload: true,\r\n        upload_by_chunks: true,\r\n        preview_images: true,\r\n    }\r\n};\r\n","import * as API from './Api.js';\r\nimport config from './../config.js';\r\n\r\nconst messageTranslation = {\r\n    'unknown_response': 'Unknown error response from connector',\r\n    'TypeError: Failed to fetch': 'Cannot get a response from connector.',\r\n};\r\n\r\n/**\r\n * Response handler for fetch responses\r\n * @param {Function} resolve\r\n * @param {Function} reject\r\n * @returns {Object}\r\n */\r\nconst handleFetch = (resolve, reject) => {\r\n    return {\r\n        xthen: (response) => {\r\n            const contentType = response.headers.get('content-type');\r\n            const contentDisp = response.headers.get('content-disposition');\r\n            const isJson = /(application|text)\\/json/.test(contentType);\r\n            const isAttachment = /attachment/.test(contentDisp);\r\n\r\n            if (! response.ok) {\r\n                if (isJson) {\r\n                    throw response.json();\r\n                }\r\n                throw Error(messageTranslation['unknown_response']);\r\n            }\r\n\r\n            if (isAttachment) {\r\n                response.blob().then(blob => {\r\n                    resolve(blob);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (isJson) {\r\n                response.json().then(json => {\r\n                    if (! json.success) {\r\n                        throw new Error();\r\n                    }\r\n                    resolve(json.data);\r\n                });\r\n                return;\r\n            }\r\n        },\r\n        xcatch: (errorResponse) => {\r\n            // is thrown json\r\n            if (errorResponse && errorResponse.then) {\r\n                errorResponse.then(errJson => {\r\n                    return reject(errJson.errorMsg || JSON.stringify(errJson));\r\n                });\r\n            } else {\r\n                return reject(messageTranslation[errorResponse] || errorResponse);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Clean path string removing double slashes and prepending a slash\r\n * @param {String} path\r\n * @returns {String}\r\n */\r\nconst fixPath = (path) => {\r\n    return ('/' + path).replace(/\\/\\//g, '/');\r\n};\r\n\r\n/**\r\n * Wrap API response for retrive file liest\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const getFileList = (path) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        return API.list(path)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for retrive file content\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const getFileBody = (path, filename) => {\r\n    path = fixPath(path + '/' + filename);\r\n    return new Promise((resolve, reject) => {\r\n        return API.getFileContent(path)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n\r\n/**\r\n * Wrap API response for retrive file content\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const renameItem = (path, filename, newFileName) => {\r\n    const oldPath = fixPath(path + '/' + filename);\r\n    const newPath = fixPath(path + '/' + newFileName);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        return API.rename(oldPath, newPath)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for create folder\r\n * @param {String} path\r\n * @param {String} folder\r\n * @returns {Object}\r\n */\r\nexport const createFolder = (path, folder) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        if (! (folder || '').trim()) {\r\n            return reject('Invalid folder name');\r\n        }\r\n        return API.createDirectory(path, folder)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for remove file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const removeItems = (path, filenames, recursive = true) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to remove');\r\n        }\r\n        return API.remove(path, filenames, recursive)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for move file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const moveItems = (path, destination, filenames) => {\r\n    path = fixPath(path);\r\n    destination = fixPath(destination);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to move');\r\n        }\r\n        return API.move(path, destination, filenames)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for copy file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const copyItems = (path, destination, filenames) => {\r\n    path = fixPath(path);\r\n    destination = fixPath(destination);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to copy');\r\n        }\r\n        return API.copy(path, destination, filenames)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for upload files\r\n * @param {String} path\r\n * @param {Object<FileList>} fileList\r\n * @returns {Object}\r\n */\r\nexport const uploadFiles = (path, fileList) => {\r\n    path = fixPath(path);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (! fileList.length) {\r\n            return reject('No files to upload');\r\n        }\r\n        return API.upload(path, fileList)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Calculate available actions for a file\r\n * @param {Object} file\r\n * @returns {Array<String>}\r\n */\r\nexport const getActionsByFile = (file, acts = []) => {\r\n    if (file.type === 'dir') {\r\n        acts.push('open');\r\n\r\n        typeof file.compressible !== 'undefined' ?\r\n            file.compressible && acts.push('compress'):\r\n            acts.push('compress');\r\n    }\r\n\r\n    if (file.type === 'file') {\r\n        acts.push('download');\r\n        config.isImageFilePattern.test(file.name) && acts.push('open');\r\n\r\n        typeof file.editable !== 'undefined' ?\r\n            file.editable && acts.push('edit'):\r\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\r\n        \r\n        typeof file.extractable !== 'undefined' ?\r\n            file.extractable && acts.push('extract'):\r\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\r\n\r\n        acts.push('copy');\r\n    }\r\n\r\n    acts.push('move');\r\n    acts.push('rename');\r\n    acts.push('perms');\r\n    acts.push('remove');\r\n\r\n    return acts;\r\n}\r\n\r\n/**\r\n * Calculate available actions for selected files, excluding non coincidences\r\n * @param {Array<Object>} files\r\n * @returns {Array<String>}\r\n */\r\nexport const getActionsByMultipleFiles = (files, acts = []) => {\r\n    files.forEach(file => {\r\n        const fileActs = getActionsByFile(file);\r\n        // intersects previous actions with the following to leave only coincidences\r\n        acts = acts.length ? acts.filter(value => -1 !== fileActs.indexOf(value)) : fileActs;\r\n    });\r\n\r\n    if (files.length > 1) {\r\n        acts.splice(acts.indexOf('open'), acts.indexOf('open') >= 0);\r\n        acts.splice(acts.indexOf('edit'), acts.indexOf('edit') >= 0);\r\n        acts.splice(acts.indexOf('compress'), acts.indexOf('compress') >= 0);\r\n        acts.splice(acts.indexOf('download'), acts.indexOf('download') >= 0);\r\n        acts.splice(acts.indexOf('rename'), acts.indexOf('rename') >= 0);\r\n        acts.push('compress');\r\n    }\r\n    return acts;\r\n}\r\n\r\n/**\r\n * Calculate file size by bytes in human readable format\r\n * @param {Number} bytes\r\n * @returns {String}\r\n */\r\nexport const getHumanFileSize = (bytes) => {\r\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\r\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\r\n};","import config from './../config.js';\r\n\r\n/**\r\n * Fetch API to list files from directory\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport function list(path) {\r\n    return fetch(config.url_list + '?path=' + (encodeURIComponent(path) || '/'));\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to create a directory\r\n * @param {String} path\r\n * @param {String} directory\r\n * @returns {Object}\r\n */\r\nexport function createDirectory(path, directory) {\r\n    return fetch(config.url_create_folder, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, directory\r\n        })\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to get file body\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport function getFileContent(path) {\r\n    return fetch(config.url_get_content + '?path=' + (encodeURIComponent(path) || '/'));\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to remove a file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function remove(path, filenames, recursive = true) {\r\n    return fetch(config.url_remove, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, filenames, recursive\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to move files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function move(path, destination, filenames) {\r\n    return fetch(config.url_move, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination, filenames\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to move files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function rename(path, destination) {\r\n    return fetch(config.url_rename, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to copy files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function copy(path, destination, filenames) {\r\n    return fetch(config.url_copy, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination, filenames\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to copy files\r\n * @param {String} path\r\n * @param {Object<FileList>} fileList\r\n * @returns {Object}\r\n */\r\nexport function upload(path, fileList, formData = new FormData()) {\r\n    [...fileList].forEach(f => {\r\n        formData.append('file[]', f);\r\n    });\r\n    formData.append('path', path);\r\n\r\n    return fetch(config.url_upload, {\r\n        method: 'POST',\r\n        body: formData, \r\n        headers: {\r\n            // a workaround for node connector, passing the path by header\r\n            path: path\r\n        }\r\n    });\r\n};\r\n","import * as APIHandler from '../Api/ApiHandler.js';\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setSelectedFiles([]));\r\n    dispatch(setFileUploadProgress(50));\r\n\r\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\r\n        dispatch(setFileUploadProgress(100));\r\n        setTimeout(f => {\r\n            dispatch(resetFileUploader());\r\n        }, 300);\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const refreshFileList = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setSelectedFiles([]));\r\n\r\n    APIHandler.getFileList(path.join('/')).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setFileList(r));\r\n    }).catch(r => {\r\n        dispatch(setFileList([]));\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const refreshFileListSublist = () => (dispatch, getState) => {\r\n    const { pathSublist } = getState();\r\n    dispatch(setLoadingSublist(true));\r\n    dispatch(setSelectedFolderSublist(null));\r\n\r\n    APIHandler.getFileList(pathSublist.join('/')).then(r => {\r\n        dispatch(setLoadingSublist(false));\r\n        dispatch(setFileListSublist(r));\r\n    }).catch(r => {\r\n        dispatch(setFileListSublist([]));\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoadingSublist(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to get file content then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const getFileContent = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n\r\n    dispatch(setLoading(true));\r\n    dispatch(setFileContent(null));\r\n    dispatch(setVisibleDialogContent(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        dispatch(setFileContent(blob));\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to rename file then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const renameItem = (fileName, newFileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    APIHandler.renameItem(path.join('/'), fileName, newFileName).then(blob => {\r\n        dispatch(setVisibleDialogRename(false));\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get download file then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const downloadFile = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        // TODO workaround large files disables ui for long time\r\n        const blobUrl = window.URL.createObjectURL(blob);\r\n        let tempLink = window.document.createElement('a');\r\n        tempLink.href = blobUrl;\r\n        tempLink.setAttribute('download', fileName);\r\n        tempLink.click();\r\n        window.URL.revokeObjectURL(blobUrl);\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get file content then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setFileContent(null));\r\n    dispatch(setVisibleDialogEdit(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        dispatch(setFileContent(blob));\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to create a folder then dispatch defined events\r\n * @param {String} createFolderName\r\n * @returns {Function}\r\n */\r\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n\r\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\r\n        dispatch(setVisibleDialogCreateFolder(false));\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to remove an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const removeItems = (files) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to move an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const moveItems = (files) => (dispatch, getState) => {\r\n    const { path, pathSublist, selectedFolderSublist } = getState();\r\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setVisibleDialogMove(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to copy an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const copyItems = (files) => (dispatch, getState) => {\r\n    const { path, pathSublist, selectedFolderSublist } = getState();\r\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setVisibleDialogCopy(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * This handles multiple selection by using shift key\r\n * @param {Object} lastFile\r\n * @returns {Function}\r\n */\r\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\r\n    const { fileList, selectedFiles } = getState();\r\n\r\n    const lastPreviouslySelected = [...selectedFiles].pop();\r\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\r\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\r\n\r\n    let toAdd = [];\r\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\r\n        toAdd = fileList.filter((index, element) => {\r\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\r\n        });\r\n    } else {\r\n        toAdd = fileList.filter((index, element) => {\r\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\r\n        });\r\n    }\r\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\r\n};\r\n\r\n\r\n/**\r\n * @returns {Function}\r\n */\r\nexport const initSubList = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setSelectedFolderSublist(null));\r\n    dispatch(setFileListSublist([]));    \r\n    dispatch(setPathSublist([...path]));\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const resetFileUploader = () => (dispatch, getState) => {\r\n    dispatch(setFileUploadProgress(0));\r\n    dispatch(setVisibleDialogUploadFile(false));\r\n    dispatch(setFileUploadList([]));\r\n};\r\n\r\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setPath(path.slice(0, -1)));\r\n    dispatch(setFileListFilter(null));\r\n    dispatch(refreshFileList());\r\n};\r\n\r\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    const newPath = [...path].slice(0, ++index);\r\n    dispatch(setPath(newPath));\r\n    dispatch(refreshFileList());\r\n    dispatch(setFileListFilter(null));\r\n};\r\n\r\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\r\n    const { pathSublist } = getState();\r\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const setPath = (path) => {\r\n    return {\r\n        type: 'SET_PATH',\r\n        value: path\r\n    };\r\n};\r\n\r\nexport const setPathSublist = (path) => {\r\n    return {\r\n        type: 'SET_PATH_SUB_LIST',\r\n        value: path\r\n    };\r\n};\r\n\r\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: 'ENTER_TO_DIRECTORY',\r\n        value: directory\r\n    });\r\n    dispatch(setFileListFilter(null));\r\n    dispatch(refreshFileList());\r\n};\r\n\r\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\r\n        value: directory\r\n    });\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const setFileList = (fileList) => {\r\n    return {\r\n        type: 'SET_FILE_LIST',\r\n        value: fileList\r\n    };\r\n};\r\n\r\nexport const setFileListSublist = (fileList) => {\r\n    return {\r\n        type: 'SET_FILE_LIST_SUB_LIST',\r\n        value: fileList\r\n    };\r\n};\r\n\r\nexport const setSelectedFiles = (files) => {\r\n    return {\r\n        type: 'SET_SELECTED_FILES',\r\n        value: files\r\n    };\r\n};\r\n\r\nexport const setSelectedFolderSublist = (file) => {\r\n    return {\r\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\r\n        value: file\r\n    };\r\n};\r\n\r\nexport const setFileListFilter = (search) => {\r\n    return {\r\n        type: 'SET_FILE_LIST_FILTER',\r\n        value: search\r\n    };\r\n};\r\n\r\nexport const setContextMenuVisible = (visible) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_VISIBLE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setContextMenuPosition = (x, y) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_POSITION',\r\n        value: [x, y]\r\n    };\r\n};\r\n\r\nexport const setContextMenuPositionElement = (element) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\r\n        value: element\r\n    };\r\n};\r\n\r\nexport const toggleSelectedFile = (file) => {\r\n    return {\r\n        type: 'TOGGLE_SELECTED_FILE',\r\n        value: file\r\n    };\r\n};\r\n\r\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\r\n    const { selectedFiles } = getState();\r\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\r\n\r\n    !isSelected && dispatch(setSelectedFiles([file]));\r\n};\r\n\r\nexport const setLoading = (value) => {\r\n    return {\r\n        type: 'SET_LOADING',\r\n        value: value\r\n    };\r\n};\r\n\r\nexport const setLoadingSublist = (value) => {\r\n    return {\r\n        type: 'SET_LOADING_SUB_LIST',\r\n        value: value\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogCreateFolder = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogUploadFile = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogRename = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_RENAME',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogMove = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_MOVE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogCopy = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_COPY',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogContent = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogEdit = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_EDIT',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setFileContent = (blob) => {\r\n   return {\r\n        type: 'SET_FILE_CONTENT',\r\n        value: blob\r\n    };\r\n};\r\n\r\nexport const setFileUploadProgress = (percentage) => {\r\n   return {\r\n        type: 'SET_FILE_UPLOAD_PROGRESS',\r\n        value: percentage\r\n    };\r\n};\r\n\r\nexport const setFileUploadList = (files) => {\r\n   return {\r\n        type: 'SET_FILE_UPLOAD_LIST',\r\n        value: files\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\r\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \r\n    rightClickOnFile, setSelectedFiles\r\n} from '../../Actions/Actions.js';\r\nimport './File.css';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport config from '../../config.js';\r\nimport { getHumanFileSize } from '../../Api/ApiHandler';\r\n\r\nclass File extends Component {\r\n    render() {\r\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\r\n        const avatarStyle = {\r\n            backgroundColor: isSelected ? blue['A200'] : null\r\n        };\r\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\r\n        return (\r\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={avatarStyle}>\r\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText className=\"filename\" primary={name} secondary={realSize} />\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        filePath: [...state.path, ownProps.name],\r\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleDoubleClick: (event) => {\r\n            if (ownProps.type === 'file') {\r\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\r\n                    dispatch(getFileContentForEdit(ownProps.name));\r\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\r\n                    dispatch(getFileContent(ownProps.name));\r\n                }\r\n                return;\r\n            }\r\n\r\n            dispatch(enterToDirectory(ownProps.name));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleContextMenu: (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\r\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\r\n\r\n            if (event.shiftKey) {\r\n                dispatch(setSelectedFileFromLastTo(ownProps));\r\n            } else {\r\n                dispatch(rightClickOnFile(ownProps));\r\n            }\r\n            \r\n            dispatch(setContextMenuVisible(true));\r\n            dispatch(setContextMenuPosition(x, y));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleClick: (event) => {\r\n            event.stopPropagation();\r\n\r\n            if (event.ctrlKey) {\r\n                dispatch(toggleSelectedFile(ownProps));\r\n            } else if (event.shiftKey) {\r\n                dispatch(setSelectedFileFromLastTo(ownProps));\r\n            } else {\r\n                dispatch(setSelectedFiles([ownProps]));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nFile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    size: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    editable: PropTypes.oneOfType([\r\n        PropTypes.bool, PropTypes.number\r\n    ])\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './FileListEmptyMessage.css';\r\n\r\nclass FileListEmptyMessage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"FileListEmptyMessage\">\r\n                No files in this folder\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 10,\r\n  },\r\n});\r\n\r\nfunction Loader(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <CircularProgress className={classes.progress} color=\"secondary\" />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nLoader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Loader);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport File from '../File/File.jsx'; \r\nimport FileListEmptyMessage from './FileListEmptyMessage';\r\nimport Loader from '../Loader/Loader.jsx'; \r\nimport './FileList.css';\r\n\r\nclass FileList extends Component {\r\n    render() {\r\n        const { fileList, loading } = this.props;\r\n        \r\n        const fileListComponent = fileList.map((file, key) => {\r\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\r\n        });\r\n\r\n        return <div className=\"FileList\">\r\n            { loading ? \r\n                <Loader /> : \r\n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const filteredList = state.fileList.filter(\r\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\r\n    );\r\n    return {\r\n        fileList: filteredList,\r\n        loading: state.loading\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleClick: (event) => {\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\r\n\r\n\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\r\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\r\n\r\nfunction CreateFolderAction(props) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback) => (event) => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <CreateNewFolderIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Create folder\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event) => {\r\n            dispatch(setVisibleDialogCreateFolder(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\r\n\r\nfunction UploadFileAction(props) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback) => (event) => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <CloudUploadIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Upload files\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event) => {\r\n            dispatch(setVisibleDialogUploadFile(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\r\n","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { connect } from 'react-redux';\r\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\r\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\r\n\r\nclass ThreeDotsMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl } = this.state;\r\n    return (\r\n      <div style={{marginLeft:'1em'}}>\r\n        <IconButton color=\"inherit\" \r\n          aria-label=\"More\"\r\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleClick}>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n\r\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\r\n          <CreateFolderAction handleClose={this.handleClose} />\r\n          <UploadFileAction handleClose={this.handleClose} />\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport Button from '@material-ui/core/Button';\r\nimport './BreadcrumbText.css';\r\n\r\nconst styles = theme => ({\r\n  lastPath: {\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  paths: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    }\r\n  }\r\n});\r\n\r\nclass BreadcrumbText extends Component {\r\n\r\n    render() {\r\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\r\n\r\n        const separator = <span>&gt;</span>;\r\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\r\n            { rootTitle } { path.length ? separator : '' }\r\n        </span>;\r\n        const lastPath = [...path].pop() || rootTitle;\r\n\r\n        const directories = path.map((dir, index) => {\r\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\r\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\r\n            </span>\r\n        });\r\n\r\n        return (\r\n            <div className=\"BreadcrumbText\">\r\n                <div className={classes.lastPath}>\r\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\r\n                        <KeyboardArrowLeftIcon />\r\n                    </Button>\r\n                    {lastPath}\r\n                </div>\r\n                <div className={classes.paths}>{rootPath} {directories}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from 'react-redux';\r\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\r\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\r\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\r\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: '4.3em'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'block', // was none\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n      display: 'block'\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 100,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction SearchAppBar(props) {\r\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            <BreadcrumbText \r\n                path={path} \r\n                handleClickPath={handleClickPath} \r\n                handleGoBack={handleGoBack}\r\n                canGoBack={canGoBack}\r\n                rootTitle=\"React Filemanager\"\r\n            />\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              value={props.value}\r\n              onChange={props.handleChange}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n            />\r\n          </div>\r\n          <ThreeDotsMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: state.fileListFilter || '',\r\n        path: state.path,\r\n        canGoBack: state.path.length\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleChange: (event) => {\r\n            dispatch(setFileListFilter(event.currentTarget.value));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(enterToPreviousDirectory());\r\n        },\r\n        /**\r\n         * @param {Object} event\r\n         * @param {Number} index\r\n         * @param {Array} path\r\n         * @returns {undefined}\r\n         */        \r\n        handleClickPath: (event, index) => {\r\n            dispatch(enterToPreviousDirectoryByIndex(index));\r\n            event.preventDefault();\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\n\r\nfunction OpenAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <OpenInBrowserIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Open\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            if (selectedFiles[0].type === 'dir') {\r\n                dispatch(enterToDirectory(selectedFiles[0].name));\r\n                return;\r\n            }\r\n            dispatch(getFileContent(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { removeItems } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction RemoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <DeleteIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Remove\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(removeItems(selectedFiles));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\r\n\r\nfunction MoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <HowToVoteIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Move\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(initSubList());\r\n            dispatch(setVisibleDialogMove(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\r\n\r\nfunction CopyAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <FileCopyIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Copy\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(initSubList());\r\n            dispatch(setVisibleDialogCopy(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\n\r\nfunction OpenAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <OpenInBrowserIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Edit\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport WrapTextIcon from '@material-ui/icons/WrapText';\r\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\r\n\r\nfunction MoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <WrapTextIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Rename\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(setVisibleDialogRename(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { downloadFile } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nfunction DownloadAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <CloudDownloadIcon   />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Download\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(downloadFile(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ContextMenu.css';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\r\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\r\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\r\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\r\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\r\nimport EditAction from './ContextMenuActions/EditAction.jsx';\r\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\r\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n    render() {\r\n        const { acts, visible, x, y } = this.props;\r\n        const actionsComp = acts.map((act, key) => {\r\n            let component;\r\n            if (act === 'open') {\r\n                component = <OpenAction key={key} />;\r\n            }\r\n            if (act === 'edit') {\r\n                component = <EditAction key={key} />;\r\n            }\r\n            if (act === 'copy') {\r\n                component = <CopyAction key={key} />;\r\n            }            \r\n            if (act === 'move') {\r\n                component = <MoveAction key={key} />;\r\n            }\r\n            if (act === 'rename') {\r\n                component = <RenameAction key={key} />;\r\n            }\r\n            if (act === 'download') {\r\n                component = <DownloadAction key={key} />;\r\n            }\r\n            if (act === 'remove') {\r\n                component = <RemoveAction key={key} />;\r\n            }\r\n            return component;\r\n        });\r\n\r\n        return (\r\n            <div> \r\n                <Menu \r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={{ top: y, left: x }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={visible} \r\n                    onClose={ () => {} } \r\n                    PaperProps={{ style: {width: 170} }}>\r\n                    { actionsComp }\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        x: state.contextMenuPosition[0] || 0,\r\n        y: state.contextMenuPosition[1] || 0,\r\n        visible: !!state.contextMenuVisible,\r\n        acts: getActionsByMultipleFiles(state.selectedFiles),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        lastBlobUrl: null,\r\n        content: '...',\r\n        loading: false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\r\n            this.setState({\r\n                lastBlobUrl: this.props.blobUrl\r\n            });\r\n            this.setState({\r\n                loading: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, open } = this.props;\r\n        return (\r\n          <div style={{marginLeft:'1em'}}>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\r\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\r\n              <DialogContent>\r\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogContent,\r\n        blobUrl: state.fileContentBlobUrl\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setVisibleDialogContent(false));\r\n        },\r\n        handleOpen: (event) => {\r\n            dispatch(setVisibleDialogContent(true));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogEdit } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        lastBlobUrl: null,\r\n        content: null,\r\n        loading: false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\r\n            this.setState({\r\n                lastBlobUrl: this.props.blobUrl\r\n            });\r\n            this.setState({\r\n                loading: true\r\n            });\r\n\r\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\r\n                return r.text();\r\n            }).then(t => {\r\n                this.setState({\r\n                    content: t\r\n                });\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, handleSave, open } = this.props;\r\n        const textAreaStyle = {\r\n            width: '100%',\r\n            minHeight: '300px'\r\n        };\r\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\r\n\r\n        return (\r\n          <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\r\n              <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\r\n              <DialogContent>\r\n                  <DialogContentText>\r\n                    { this.state.loading ? 'Loading...' : textArea }\r\n                  </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                    Close\r\n                </Button>\r\n                <Button color=\"primary\" onClick={handleSave} type=\"submit\">\r\n                    Update\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogEdit,\r\n        blobUrl: state.fileContentBlobUrl\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setVisibleDialogEdit(false));\r\n        },\r\n        handleOpen: (event) => {\r\n            dispatch(setVisibleDialogEdit(true));\r\n        },\r\n        handleSave: (event) => {\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { handleClose, handleSave, value, open } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\r\n                      Save\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        createFolderName: state.createFolderName,\r\n        open: state.visibleDialogCreateFolder\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: event => {\r\n            dispatch(setVisibleDialogCreateFolder(false));\r\n        },\r\n        handleSave: event => {\r\n            event.preventDefault();\r\n            const folderName = event.currentTarget.form.querySelector('input').value;\r\n            dispatch(createNewFolder(folderName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { renameItem, setVisibleDialogRename } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    componentWillReceiveProps (props) {\r\n        this.setState({value: props.realName});\r\n    }\r\n\r\n    handleChange (event) {\r\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\r\n    }\r\n\r\n    handleSave (event) {\r\n        this.props.handleSave(event)(this.props.realName, this.state.value);\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        const { handleClose, open } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\r\n                      Save\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogRename,\r\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : ''\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: event => {\r\n            dispatch(setVisibleDialogRename(false));\r\n        },\r\n        handleSave: event => (realName, newName) => {\r\n            event.preventDefault();\r\n            dispatch(renameItem(realName, newName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setSelectedFolderSublist, enterToDirectorySublist \r\n} from '../../../Actions/Actions.js';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport '../File.css';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\n\r\nclass FileSublist extends Component {\r\n    render() {\r\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\r\n        const avatarStyle = {\r\n            backgroundColor: isSelected ? blue['A200'] : null\r\n        };\r\n        return (\r\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={avatarStyle}>\r\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={name} secondary=\"\" />\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        filePath: [...state.path, ownProps.name],\r\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleDoubleClick: (event) => {\r\n            dispatch(enterToDirectorySublist(ownProps.name));\r\n            dispatch(setSelectedFolderSublist(null));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleClick: (event) => {\r\n            event.stopPropagation(); \r\n            dispatch(setSelectedFolderSublist(ownProps));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \r\nimport Loader from '../../Loader/Loader.jsx'; \r\nimport FileListEmptyMessage from '../FileListEmptyMessage';\r\nimport './FileListSublist.css'; \r\n\r\nclass FileListSublist extends Component {\r\n    render() {\r\n        const { fileList, loadingSublist } = this.props;\r\n        \r\n        const fileListComponent = fileList.map((file, key) => {\r\n            return <FileSublist type={file.type} name={file.name} key={key} />\r\n        });\r\n\r\n        return <div className=\"FileListSublist\">\r\n            { loadingSublist ? \r\n                <Loader /> : \r\n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const filteredList = state.fileListSublist\r\n        .filter(file => file.type === 'dir')\r\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \r\n            !state.selectedFiles.find(f => f.name === file.name) : true\r\n        );\r\n    return {\r\n        fileList: filteredList,\r\n        loadingSublist: state.loadingSublist,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\r\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { \r\n            selectedPath, handleClose, handleSave, open, \r\n            selectedFiles, canGoBack, canMove, handleGoBack \r\n        } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-move\">\r\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileListSublist />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\r\n                            <KeyboardArrowLeftIcon /> Go back directory\r\n                        </Button>\r\n\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\r\n                            Move\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // prevent moving to same folder\r\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\r\n\r\n    return {\r\n        open: state.visibleDialogMove,\r\n        selectedFolderSublist: state.selectedFolderSublist,\r\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\r\n        selectedFiles: state.selectedFiles,\r\n        pathSublist: state.pathSublist,\r\n        canGoBack: state.pathSublist.length,\r\n        canMove: state.selectedFolderSublist && canMove\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(setVisibleDialogMove(false));\r\n        },\r\n        handleSave: (event, selectedFiles) => {\r\n            dispatch(moveItems(selectedFiles));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(enterToPreviousDirectorySublist());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\r\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { \r\n            selectedPath, handleClose, handleSave, open, \r\n            canGoBack, canCopy, selectedFiles, handleGoBack \r\n        } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-copy\">\r\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileListSublist />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\r\n                            <KeyboardArrowLeftIcon /> Go back directory\r\n                        </Button>\r\n\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\r\n                            Copy\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // prevent copying to same folder\r\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\r\n\r\n    return {\r\n        open: state.visibleDialogCopy,\r\n        selectedFolderSublist: state.selectedFolderSublist,\r\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\r\n        canGoBack: state.pathSublist.length,\r\n        canCopy: state.selectedFolderSublist && canCopy,\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(setVisibleDialogCopy(false));\r\n        },\r\n        handleSave: (event, selectedFiles) => {\r\n            dispatch(copyItems(selectedFiles));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(enterToPreviousDirectorySublist());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { getHumanFileSize } from '../../Api/ApiHandler';\r\n\r\nfunction UploadFileList(props) {\r\n    const { files } = props;\r\n    const list = files.map((f, i) =>\r\n        <ListItem dense key={i}>\r\n            <ListItemIcon>\r\n                <FileIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\r\n        </ListItem>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <List component=\"nav\">\r\n                {list}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nUploadFileList.propTypes = {\r\n    files: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UploadFileList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport UploadFileList from './UploadFileList';\r\n\r\nclass FileUploader extends Component {\r\n\r\n    handleReset(event) {\r\n        this.refs.inputfile.value = '';\r\n        this.props.handleReset(event);\r\n    }\r\n\r\n    render() {\r\n        const { fileUploadList, handleSelectedFiles } = this.props;\r\n        const styles = {\r\n            inputfile: {\r\n                display: 'none'\r\n            }, inputreset: {\r\n                display: fileUploadList.length ? 'inline-flex' : 'none'\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"button-file\">\r\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\r\n                    <Button component=\"span\" variant=\"contained\" color=\"primary\">\r\n                        Select Files\r\n                    </Button>\r\n                </label>\r\n\r\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\r\n                    Clear\r\n                </Button>\r\n\r\n                <UploadFileList files={fileUploadList} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileUploader.propTypes = {\r\n    fileUploadList: PropTypes.array.isRequired,\r\n    handleReset: PropTypes.func.isRequired,\r\n    handleSelectedFiles: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FileUploader;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { connect } from 'react-redux';\r\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\r\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-upload\">\r\n                        Upload files\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\r\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\r\n                            Upload\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogUploadFile,\r\n        canUpload: state.fileUploadList.length,\r\n        fileUploadList: state.fileUploadList,\r\n        fileUploadProgress: state.fileUploadProgress\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(resetFileUploader());\r\n        },\r\n        handleUpload: (event) => {\r\n            event.preventDefault();\r\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\r\n            dispatch(uploadFiles(files));\r\n        },\r\n        handleSelectedFiles: (event) => {\r\n            dispatch(setFileUploadList(\r\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\r\n            ));\r\n        },\r\n        handleReset: (event) => {\r\n            dispatch(setFileUploadList([]));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport DialogContent from './Content/Content.jsx';\r\nimport DialogEdit from './Edit/Edit.jsx';\r\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\r\nimport DialogRename from './Rename/Rename.jsx';\r\nimport DialogMove from './Move/Move.jsx';\r\nimport DialogCopy from './Copy/Copy.jsx';\r\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\r\n\r\nfunction Dialogs(props) {\r\n    return (\r\n        <div className=\"Dialogs\">\r\n            <DialogContent />\r\n            <DialogEdit />\r\n            <DialogCreateFolder />\r\n            <DialogMove />\r\n            <DialogCopy />\r\n            <DialogRename />\r\n            <DialogUploadFile />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass DynamicSnackbar extends React.Component {\r\n  render() {\r\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={notificationDuration}\r\n          onClose={handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{errorMsg}</span>}\r\n          action={[\r\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDynamicSnackbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        open: !!state.errorMsg,\r\n        errorMsg: state.errorMsg,\r\n        notificationDuration: state.notificationDuration || 60000\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch({\r\n                type: 'SET_ERROR_MSG',\r\n                value: null\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\r\n\r\n","import React, { Component } from 'react';\r\nimport FileList from './Components/FileList/FileList.jsx';\r\nimport Navbar from './Components/Navbar/Navbar.jsx';\r\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\r\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\r\n\r\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { connect } from 'react-redux';\r\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\r\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.init();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MaterialUI theme={theme}>\r\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\r\n                    <Navbar />\r\n                    <FileList />\r\n                    <ContextMenu />\r\n                    <DynamicSnackbar />\r\n                    <Dialogs />\r\n                </div>\r\n            </MaterialUI>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        init: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n\r\n        handleHideContextMenu: (event) => {\r\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\r\n                event.preventDefault();\r\n            }\r\n            dispatch(setContextMenuVisible(false));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport MainReducer from './Reducers/MainReducer'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(MainReducer, applyMiddleware(thunk));\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}